Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    IF
    LBRACKETS
    LCHAV
    LESS
    PV
    RBRACKETS
    RCHAV
    STRING

Grammar

Rule 0     S' -> program
Rule 1     program -> CLASS ID LPAREN ID IGUAL ID RPAREN DP classbody
Rule 2     program -> CLASS ID LPAREN ID RPAREN DP classbody
Rule 3     program -> CLASS ID DP classbody
Rule 4     program -> CLASS ID LPAREN ID IGUAL ID RPAREN DP classbody program
Rule 5     program -> CLASS ID LPAREN ID RPAREN DP classbody program
Rule 6     program -> CLASS ID DP classbody program
Rule 7     classbody -> NEWLINE IDENT decls DEDENT
Rule 8     decls -> decl decls
Rule 9     decls -> decl
Rule 10    decl -> funcdecl
Rule 11    decl -> ID IGUAL exp
Rule 12    funcdecl -> signature body
Rule 13    signature -> DEF ID LPAREN sigparams RPAREN DP
Rule 14    signature -> DEF ID LPAREN RPAREN DP
Rule 15    sigparams -> ID
Rule 16    sigparams -> SELF
Rule 17    sigparams -> ID COMMA sigparams
Rule 18    sigparams -> SELF COMMA sigparams
Rule 19    body -> NEWLINE IDENT stms DEDENT
Rule 20    stms -> stm
Rule 21    stms -> stm stms
Rule 22    stm -> exp NEWLINE
Rule 23    stm -> WHILE exp DP body
Rule 24    stm -> RETURN exp NEWLINE
Rule 25    stm -> PASS NEWLINE
Rule 26    exp -> exp IGUAL exp1
Rule 27    exp -> exp1
Rule 28    exp1 -> exp1 SOMA exp2
Rule 29    exp1 -> exp2
Rule 30    exp2 -> exp2 VEZES exp3
Rule 31    exp2 -> exp3
Rule 32    exp3 -> exp4 POT exp3
Rule 33    exp3 -> exp4
Rule 34    exp4 -> call
Rule 35    exp4 -> NUMBER
Rule 36    exp4 -> ID
Rule 37    exp4 -> TRUE
Rule 38    exp4 -> FALSE
Rule 39    exp4 -> SELF
Rule 40    exp4 -> ID P exp4
Rule 41    exp4 -> SELF P exp4
Rule 42    call -> ID LPAREN params RPAREN
Rule 43    call -> ID LPAREN RPAREN
Rule 44    params -> exp COMMA params
Rule 45    params -> exp

Terminals, with rules where they appear

CLASS                : 1 2 3 4 5 6
COMMA                : 17 18 44
DEDENT               : 7 19
DEF                  : 13 14
DP                   : 1 2 3 4 5 6 13 14 23
FALSE                : 38
ID                   : 1 1 1 2 2 3 4 4 4 5 5 6 11 13 14 15 17 36 40 42 43
IDENT                : 7 19
IF                   : 
IGUAL                : 1 4 11 26
LBRACKETS            : 
LCHAV                : 
LESS                 : 
LPAREN               : 1 2 4 5 13 14 42 43
NEWLINE              : 7 19 22 24 25
NUMBER               : 35
P                    : 40 41
PASS                 : 25
POT                  : 32
PV                   : 
RBRACKETS            : 
RCHAV                : 
RETURN               : 24
RPAREN               : 1 2 4 5 13 14 42 43
SELF                 : 16 18 39 41
SOMA                 : 28
STRING               : 
TRUE                 : 37
VEZES                : 30
WHILE                : 23
error                : 

Nonterminals, with rules where they appear

body                 : 12 23
call                 : 34
classbody            : 1 2 3 4 5 6
decl                 : 8 9
decls                : 7 8
exp                  : 11 22 23 24 26 44 45
exp1                 : 26 27 28
exp2                 : 28 29 30
exp3                 : 30 31 32
exp4                 : 32 33 40 41
funcdecl             : 10
params               : 42 44
program              : 4 5 6 0
signature            : 12
sigparams            : 13 17 18
stm                  : 20 21
stms                 : 19 21

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . CLASS ID LPAREN ID IGUAL ID RPAREN DP classbody
    (2) program -> . CLASS ID LPAREN ID RPAREN DP classbody
    (3) program -> . CLASS ID DP classbody
    (4) program -> . CLASS ID LPAREN ID IGUAL ID RPAREN DP classbody program
    (5) program -> . CLASS ID LPAREN ID RPAREN DP classbody program
    (6) program -> . CLASS ID DP classbody program

    CLASS           shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> CLASS . ID LPAREN ID IGUAL ID RPAREN DP classbody
    (2) program -> CLASS . ID LPAREN ID RPAREN DP classbody
    (3) program -> CLASS . ID DP classbody
    (4) program -> CLASS . ID LPAREN ID IGUAL ID RPAREN DP classbody program
    (5) program -> CLASS . ID LPAREN ID RPAREN DP classbody program
    (6) program -> CLASS . ID DP classbody program

    ID              shift and go to state 3


state 3

    (1) program -> CLASS ID . LPAREN ID IGUAL ID RPAREN DP classbody
    (2) program -> CLASS ID . LPAREN ID RPAREN DP classbody
    (3) program -> CLASS ID . DP classbody
    (4) program -> CLASS ID . LPAREN ID IGUAL ID RPAREN DP classbody program
    (5) program -> CLASS ID . LPAREN ID RPAREN DP classbody program
    (6) program -> CLASS ID . DP classbody program

    LPAREN          shift and go to state 4
    DP              shift and go to state 5


state 4

    (1) program -> CLASS ID LPAREN . ID IGUAL ID RPAREN DP classbody
    (2) program -> CLASS ID LPAREN . ID RPAREN DP classbody
    (4) program -> CLASS ID LPAREN . ID IGUAL ID RPAREN DP classbody program
    (5) program -> CLASS ID LPAREN . ID RPAREN DP classbody program

    ID              shift and go to state 6


state 5

    (3) program -> CLASS ID DP . classbody
    (6) program -> CLASS ID DP . classbody program
    (7) classbody -> . NEWLINE IDENT decls DEDENT

    NEWLINE         shift and go to state 8

    classbody                      shift and go to state 7

state 6

    (1) program -> CLASS ID LPAREN ID . IGUAL ID RPAREN DP classbody
    (2) program -> CLASS ID LPAREN ID . RPAREN DP classbody
    (4) program -> CLASS ID LPAREN ID . IGUAL ID RPAREN DP classbody program
    (5) program -> CLASS ID LPAREN ID . RPAREN DP classbody program

    IGUAL           shift and go to state 9
    RPAREN          shift and go to state 10


state 7

    (3) program -> CLASS ID DP classbody .
    (6) program -> CLASS ID DP classbody . program
    (1) program -> . CLASS ID LPAREN ID IGUAL ID RPAREN DP classbody
    (2) program -> . CLASS ID LPAREN ID RPAREN DP classbody
    (3) program -> . CLASS ID DP classbody
    (4) program -> . CLASS ID LPAREN ID IGUAL ID RPAREN DP classbody program
    (5) program -> . CLASS ID LPAREN ID RPAREN DP classbody program
    (6) program -> . CLASS ID DP classbody program

    $end            reduce using rule 3 (program -> CLASS ID DP classbody .)
    CLASS           shift and go to state 2

    program                        shift and go to state 11

state 8

    (7) classbody -> NEWLINE . IDENT decls DEDENT

    IDENT           shift and go to state 12


state 9

    (1) program -> CLASS ID LPAREN ID IGUAL . ID RPAREN DP classbody
    (4) program -> CLASS ID LPAREN ID IGUAL . ID RPAREN DP classbody program

    ID              shift and go to state 13


state 10

    (2) program -> CLASS ID LPAREN ID RPAREN . DP classbody
    (5) program -> CLASS ID LPAREN ID RPAREN . DP classbody program

    DP              shift and go to state 14


state 11

    (6) program -> CLASS ID DP classbody program .

    $end            reduce using rule 6 (program -> CLASS ID DP classbody program .)


state 12

    (7) classbody -> NEWLINE IDENT . decls DEDENT
    (8) decls -> . decl decls
    (9) decls -> . decl
    (10) decl -> . funcdecl
    (11) decl -> . ID IGUAL exp
    (12) funcdecl -> . signature body
    (13) signature -> . DEF ID LPAREN sigparams RPAREN DP
    (14) signature -> . DEF ID LPAREN RPAREN DP

    ID              shift and go to state 18
    DEF             shift and go to state 20

    decls                          shift and go to state 15
    decl                           shift and go to state 16
    funcdecl                       shift and go to state 17
    signature                      shift and go to state 19

state 13

    (1) program -> CLASS ID LPAREN ID IGUAL ID . RPAREN DP classbody
    (4) program -> CLASS ID LPAREN ID IGUAL ID . RPAREN DP classbody program

    RPAREN          shift and go to state 21


state 14

    (2) program -> CLASS ID LPAREN ID RPAREN DP . classbody
    (5) program -> CLASS ID LPAREN ID RPAREN DP . classbody program
    (7) classbody -> . NEWLINE IDENT decls DEDENT

    NEWLINE         shift and go to state 8

    classbody                      shift and go to state 22

state 15

    (7) classbody -> NEWLINE IDENT decls . DEDENT

    DEDENT          shift and go to state 23


state 16

    (8) decls -> decl . decls
    (9) decls -> decl .
    (8) decls -> . decl decls
    (9) decls -> . decl
    (10) decl -> . funcdecl
    (11) decl -> . ID IGUAL exp
    (12) funcdecl -> . signature body
    (13) signature -> . DEF ID LPAREN sigparams RPAREN DP
    (14) signature -> . DEF ID LPAREN RPAREN DP

    DEDENT          reduce using rule 9 (decls -> decl .)
    ID              shift and go to state 18
    DEF             shift and go to state 20

    decl                           shift and go to state 16
    decls                          shift and go to state 24
    funcdecl                       shift and go to state 17
    signature                      shift and go to state 19

state 17

    (10) decl -> funcdecl .

    ID              reduce using rule 10 (decl -> funcdecl .)
    DEF             reduce using rule 10 (decl -> funcdecl .)
    DEDENT          reduce using rule 10 (decl -> funcdecl .)


state 18

    (11) decl -> ID . IGUAL exp

    IGUAL           shift and go to state 25


state 19

    (12) funcdecl -> signature . body
    (19) body -> . NEWLINE IDENT stms DEDENT

    NEWLINE         shift and go to state 27

    body                           shift and go to state 26

state 20

    (13) signature -> DEF . ID LPAREN sigparams RPAREN DP
    (14) signature -> DEF . ID LPAREN RPAREN DP

    ID              shift and go to state 28


state 21

    (1) program -> CLASS ID LPAREN ID IGUAL ID RPAREN . DP classbody
    (4) program -> CLASS ID LPAREN ID IGUAL ID RPAREN . DP classbody program

    DP              shift and go to state 29


state 22

    (2) program -> CLASS ID LPAREN ID RPAREN DP classbody .
    (5) program -> CLASS ID LPAREN ID RPAREN DP classbody . program
    (1) program -> . CLASS ID LPAREN ID IGUAL ID RPAREN DP classbody
    (2) program -> . CLASS ID LPAREN ID RPAREN DP classbody
    (3) program -> . CLASS ID DP classbody
    (4) program -> . CLASS ID LPAREN ID IGUAL ID RPAREN DP classbody program
    (5) program -> . CLASS ID LPAREN ID RPAREN DP classbody program
    (6) program -> . CLASS ID DP classbody program

    $end            reduce using rule 2 (program -> CLASS ID LPAREN ID RPAREN DP classbody .)
    CLASS           shift and go to state 2

    program                        shift and go to state 30

state 23

    (7) classbody -> NEWLINE IDENT decls DEDENT .

    CLASS           reduce using rule 7 (classbody -> NEWLINE IDENT decls DEDENT .)
    $end            reduce using rule 7 (classbody -> NEWLINE IDENT decls DEDENT .)


state 24

    (8) decls -> decl decls .

    DEDENT          reduce using rule 8 (decls -> decl decls .)


state 25

    (11) decl -> ID IGUAL . exp
    (26) exp -> . exp IGUAL exp1
    (27) exp -> . exp1
    (28) exp1 -> . exp1 SOMA exp2
    (29) exp1 -> . exp2
    (30) exp2 -> . exp2 VEZES exp3
    (31) exp2 -> . exp3
    (32) exp3 -> . exp4 POT exp3
    (33) exp3 -> . exp4
    (34) exp4 -> . call
    (35) exp4 -> . NUMBER
    (36) exp4 -> . ID
    (37) exp4 -> . TRUE
    (38) exp4 -> . FALSE
    (39) exp4 -> . SELF
    (40) exp4 -> . ID P exp4
    (41) exp4 -> . SELF P exp4
    (42) call -> . ID LPAREN params RPAREN
    (43) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 31
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    SELF            shift and go to state 41

    exp                            shift and go to state 32
    exp1                           shift and go to state 33
    exp2                           shift and go to state 34
    exp3                           shift and go to state 35
    exp4                           shift and go to state 36
    call                           shift and go to state 37

state 26

    (12) funcdecl -> signature body .

    ID              reduce using rule 12 (funcdecl -> signature body .)
    DEF             reduce using rule 12 (funcdecl -> signature body .)
    DEDENT          reduce using rule 12 (funcdecl -> signature body .)


state 27

    (19) body -> NEWLINE . IDENT stms DEDENT

    IDENT           shift and go to state 42


state 28

    (13) signature -> DEF ID . LPAREN sigparams RPAREN DP
    (14) signature -> DEF ID . LPAREN RPAREN DP

    LPAREN          shift and go to state 43


state 29

    (1) program -> CLASS ID LPAREN ID IGUAL ID RPAREN DP . classbody
    (4) program -> CLASS ID LPAREN ID IGUAL ID RPAREN DP . classbody program
    (7) classbody -> . NEWLINE IDENT decls DEDENT

    NEWLINE         shift and go to state 8

    classbody                      shift and go to state 44

state 30

    (5) program -> CLASS ID LPAREN ID RPAREN DP classbody program .

    $end            reduce using rule 5 (program -> CLASS ID LPAREN ID RPAREN DP classbody program .)


state 31

    (36) exp4 -> ID .
    (40) exp4 -> ID . P exp4
    (42) call -> ID . LPAREN params RPAREN
    (43) call -> ID . LPAREN RPAREN

    POT             reduce using rule 36 (exp4 -> ID .)
    VEZES           reduce using rule 36 (exp4 -> ID .)
    SOMA            reduce using rule 36 (exp4 -> ID .)
    IGUAL           reduce using rule 36 (exp4 -> ID .)
    ID              reduce using rule 36 (exp4 -> ID .)
    DEF             reduce using rule 36 (exp4 -> ID .)
    DEDENT          reduce using rule 36 (exp4 -> ID .)
    NEWLINE         reduce using rule 36 (exp4 -> ID .)
    COMMA           reduce using rule 36 (exp4 -> ID .)
    RPAREN          reduce using rule 36 (exp4 -> ID .)
    DP              reduce using rule 36 (exp4 -> ID .)
    P               shift and go to state 45
    LPAREN          shift and go to state 46


state 32

    (11) decl -> ID IGUAL exp .
    (26) exp -> exp . IGUAL exp1

    ID              reduce using rule 11 (decl -> ID IGUAL exp .)
    DEF             reduce using rule 11 (decl -> ID IGUAL exp .)
    DEDENT          reduce using rule 11 (decl -> ID IGUAL exp .)
    IGUAL           shift and go to state 47


state 33

    (27) exp -> exp1 .
    (28) exp1 -> exp1 . SOMA exp2

    IGUAL           reduce using rule 27 (exp -> exp1 .)
    ID              reduce using rule 27 (exp -> exp1 .)
    DEF             reduce using rule 27 (exp -> exp1 .)
    DEDENT          reduce using rule 27 (exp -> exp1 .)
    NEWLINE         reduce using rule 27 (exp -> exp1 .)
    COMMA           reduce using rule 27 (exp -> exp1 .)
    RPAREN          reduce using rule 27 (exp -> exp1 .)
    DP              reduce using rule 27 (exp -> exp1 .)
    SOMA            shift and go to state 48


state 34

    (29) exp1 -> exp2 .
    (30) exp2 -> exp2 . VEZES exp3

    SOMA            reduce using rule 29 (exp1 -> exp2 .)
    IGUAL           reduce using rule 29 (exp1 -> exp2 .)
    ID              reduce using rule 29 (exp1 -> exp2 .)
    DEF             reduce using rule 29 (exp1 -> exp2 .)
    DEDENT          reduce using rule 29 (exp1 -> exp2 .)
    NEWLINE         reduce using rule 29 (exp1 -> exp2 .)
    COMMA           reduce using rule 29 (exp1 -> exp2 .)
    RPAREN          reduce using rule 29 (exp1 -> exp2 .)
    DP              reduce using rule 29 (exp1 -> exp2 .)
    VEZES           shift and go to state 49


state 35

    (31) exp2 -> exp3 .

    VEZES           reduce using rule 31 (exp2 -> exp3 .)
    SOMA            reduce using rule 31 (exp2 -> exp3 .)
    IGUAL           reduce using rule 31 (exp2 -> exp3 .)
    ID              reduce using rule 31 (exp2 -> exp3 .)
    DEF             reduce using rule 31 (exp2 -> exp3 .)
    DEDENT          reduce using rule 31 (exp2 -> exp3 .)
    NEWLINE         reduce using rule 31 (exp2 -> exp3 .)
    COMMA           reduce using rule 31 (exp2 -> exp3 .)
    RPAREN          reduce using rule 31 (exp2 -> exp3 .)
    DP              reduce using rule 31 (exp2 -> exp3 .)


state 36

    (32) exp3 -> exp4 . POT exp3
    (33) exp3 -> exp4 .

    POT             shift and go to state 50
    VEZES           reduce using rule 33 (exp3 -> exp4 .)
    SOMA            reduce using rule 33 (exp3 -> exp4 .)
    IGUAL           reduce using rule 33 (exp3 -> exp4 .)
    ID              reduce using rule 33 (exp3 -> exp4 .)
    DEF             reduce using rule 33 (exp3 -> exp4 .)
    DEDENT          reduce using rule 33 (exp3 -> exp4 .)
    NEWLINE         reduce using rule 33 (exp3 -> exp4 .)
    COMMA           reduce using rule 33 (exp3 -> exp4 .)
    RPAREN          reduce using rule 33 (exp3 -> exp4 .)
    DP              reduce using rule 33 (exp3 -> exp4 .)


state 37

    (34) exp4 -> call .

    POT             reduce using rule 34 (exp4 -> call .)
    VEZES           reduce using rule 34 (exp4 -> call .)
    SOMA            reduce using rule 34 (exp4 -> call .)
    IGUAL           reduce using rule 34 (exp4 -> call .)
    ID              reduce using rule 34 (exp4 -> call .)
    DEF             reduce using rule 34 (exp4 -> call .)
    DEDENT          reduce using rule 34 (exp4 -> call .)
    NEWLINE         reduce using rule 34 (exp4 -> call .)
    COMMA           reduce using rule 34 (exp4 -> call .)
    RPAREN          reduce using rule 34 (exp4 -> call .)
    DP              reduce using rule 34 (exp4 -> call .)


state 38

    (35) exp4 -> NUMBER .

    POT             reduce using rule 35 (exp4 -> NUMBER .)
    VEZES           reduce using rule 35 (exp4 -> NUMBER .)
    SOMA            reduce using rule 35 (exp4 -> NUMBER .)
    IGUAL           reduce using rule 35 (exp4 -> NUMBER .)
    ID              reduce using rule 35 (exp4 -> NUMBER .)
    DEF             reduce using rule 35 (exp4 -> NUMBER .)
    DEDENT          reduce using rule 35 (exp4 -> NUMBER .)
    NEWLINE         reduce using rule 35 (exp4 -> NUMBER .)
    COMMA           reduce using rule 35 (exp4 -> NUMBER .)
    RPAREN          reduce using rule 35 (exp4 -> NUMBER .)
    DP              reduce using rule 35 (exp4 -> NUMBER .)


state 39

    (37) exp4 -> TRUE .

    POT             reduce using rule 37 (exp4 -> TRUE .)
    VEZES           reduce using rule 37 (exp4 -> TRUE .)
    SOMA            reduce using rule 37 (exp4 -> TRUE .)
    IGUAL           reduce using rule 37 (exp4 -> TRUE .)
    ID              reduce using rule 37 (exp4 -> TRUE .)
    DEF             reduce using rule 37 (exp4 -> TRUE .)
    DEDENT          reduce using rule 37 (exp4 -> TRUE .)
    NEWLINE         reduce using rule 37 (exp4 -> TRUE .)
    COMMA           reduce using rule 37 (exp4 -> TRUE .)
    RPAREN          reduce using rule 37 (exp4 -> TRUE .)
    DP              reduce using rule 37 (exp4 -> TRUE .)


state 40

    (38) exp4 -> FALSE .

    POT             reduce using rule 38 (exp4 -> FALSE .)
    VEZES           reduce using rule 38 (exp4 -> FALSE .)
    SOMA            reduce using rule 38 (exp4 -> FALSE .)
    IGUAL           reduce using rule 38 (exp4 -> FALSE .)
    ID              reduce using rule 38 (exp4 -> FALSE .)
    DEF             reduce using rule 38 (exp4 -> FALSE .)
    DEDENT          reduce using rule 38 (exp4 -> FALSE .)
    NEWLINE         reduce using rule 38 (exp4 -> FALSE .)
    COMMA           reduce using rule 38 (exp4 -> FALSE .)
    RPAREN          reduce using rule 38 (exp4 -> FALSE .)
    DP              reduce using rule 38 (exp4 -> FALSE .)


state 41

    (39) exp4 -> SELF .
    (41) exp4 -> SELF . P exp4

    POT             reduce using rule 39 (exp4 -> SELF .)
    VEZES           reduce using rule 39 (exp4 -> SELF .)
    SOMA            reduce using rule 39 (exp4 -> SELF .)
    IGUAL           reduce using rule 39 (exp4 -> SELF .)
    ID              reduce using rule 39 (exp4 -> SELF .)
    DEF             reduce using rule 39 (exp4 -> SELF .)
    DEDENT          reduce using rule 39 (exp4 -> SELF .)
    NEWLINE         reduce using rule 39 (exp4 -> SELF .)
    COMMA           reduce using rule 39 (exp4 -> SELF .)
    RPAREN          reduce using rule 39 (exp4 -> SELF .)
    DP              reduce using rule 39 (exp4 -> SELF .)
    P               shift and go to state 51


state 42

    (19) body -> NEWLINE IDENT . stms DEDENT
    (20) stms -> . stm
    (21) stms -> . stm stms
    (22) stm -> . exp NEWLINE
    (23) stm -> . WHILE exp DP body
    (24) stm -> . RETURN exp NEWLINE
    (25) stm -> . PASS NEWLINE
    (26) exp -> . exp IGUAL exp1
    (27) exp -> . exp1
    (28) exp1 -> . exp1 SOMA exp2
    (29) exp1 -> . exp2
    (30) exp2 -> . exp2 VEZES exp3
    (31) exp2 -> . exp3
    (32) exp3 -> . exp4 POT exp3
    (33) exp3 -> . exp4
    (34) exp4 -> . call
    (35) exp4 -> . NUMBER
    (36) exp4 -> . ID
    (37) exp4 -> . TRUE
    (38) exp4 -> . FALSE
    (39) exp4 -> . SELF
    (40) exp4 -> . ID P exp4
    (41) exp4 -> . SELF P exp4
    (42) call -> . ID LPAREN params RPAREN
    (43) call -> . ID LPAREN RPAREN

    WHILE           shift and go to state 55
    RETURN          shift and go to state 56
    PASS            shift and go to state 57
    NUMBER          shift and go to state 38
    ID              shift and go to state 31
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    SELF            shift and go to state 41

    stms                           shift and go to state 52
    stm                            shift and go to state 53
    exp                            shift and go to state 54
    exp1                           shift and go to state 33
    exp2                           shift and go to state 34
    exp3                           shift and go to state 35
    exp4                           shift and go to state 36
    call                           shift and go to state 37

state 43

    (13) signature -> DEF ID LPAREN . sigparams RPAREN DP
    (14) signature -> DEF ID LPAREN . RPAREN DP
    (15) sigparams -> . ID
    (16) sigparams -> . SELF
    (17) sigparams -> . ID COMMA sigparams
    (18) sigparams -> . SELF COMMA sigparams

    RPAREN          shift and go to state 60
    ID              shift and go to state 58
    SELF            shift and go to state 61

    sigparams                      shift and go to state 59

state 44

    (1) program -> CLASS ID LPAREN ID IGUAL ID RPAREN DP classbody .
    (4) program -> CLASS ID LPAREN ID IGUAL ID RPAREN DP classbody . program
    (1) program -> . CLASS ID LPAREN ID IGUAL ID RPAREN DP classbody
    (2) program -> . CLASS ID LPAREN ID RPAREN DP classbody
    (3) program -> . CLASS ID DP classbody
    (4) program -> . CLASS ID LPAREN ID IGUAL ID RPAREN DP classbody program
    (5) program -> . CLASS ID LPAREN ID RPAREN DP classbody program
    (6) program -> . CLASS ID DP classbody program

    $end            reduce using rule 1 (program -> CLASS ID LPAREN ID IGUAL ID RPAREN DP classbody .)
    CLASS           shift and go to state 2

    program                        shift and go to state 62

state 45

    (40) exp4 -> ID P . exp4
    (34) exp4 -> . call
    (35) exp4 -> . NUMBER
    (36) exp4 -> . ID
    (37) exp4 -> . TRUE
    (38) exp4 -> . FALSE
    (39) exp4 -> . SELF
    (40) exp4 -> . ID P exp4
    (41) exp4 -> . SELF P exp4
    (42) call -> . ID LPAREN params RPAREN
    (43) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 31
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    SELF            shift and go to state 41

    exp4                           shift and go to state 63
    call                           shift and go to state 37

state 46

    (42) call -> ID LPAREN . params RPAREN
    (43) call -> ID LPAREN . RPAREN
    (44) params -> . exp COMMA params
    (45) params -> . exp
    (26) exp -> . exp IGUAL exp1
    (27) exp -> . exp1
    (28) exp1 -> . exp1 SOMA exp2
    (29) exp1 -> . exp2
    (30) exp2 -> . exp2 VEZES exp3
    (31) exp2 -> . exp3
    (32) exp3 -> . exp4 POT exp3
    (33) exp3 -> . exp4
    (34) exp4 -> . call
    (35) exp4 -> . NUMBER
    (36) exp4 -> . ID
    (37) exp4 -> . TRUE
    (38) exp4 -> . FALSE
    (39) exp4 -> . SELF
    (40) exp4 -> . ID P exp4
    (41) exp4 -> . SELF P exp4
    (42) call -> . ID LPAREN params RPAREN
    (43) call -> . ID LPAREN RPAREN

    RPAREN          shift and go to state 65
    NUMBER          shift and go to state 38
    ID              shift and go to state 31
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    SELF            shift and go to state 41

    params                         shift and go to state 64
    exp                            shift and go to state 66
    exp1                           shift and go to state 33
    exp2                           shift and go to state 34
    exp3                           shift and go to state 35
    exp4                           shift and go to state 36
    call                           shift and go to state 37

state 47

    (26) exp -> exp IGUAL . exp1
    (28) exp1 -> . exp1 SOMA exp2
    (29) exp1 -> . exp2
    (30) exp2 -> . exp2 VEZES exp3
    (31) exp2 -> . exp3
    (32) exp3 -> . exp4 POT exp3
    (33) exp3 -> . exp4
    (34) exp4 -> . call
    (35) exp4 -> . NUMBER
    (36) exp4 -> . ID
    (37) exp4 -> . TRUE
    (38) exp4 -> . FALSE
    (39) exp4 -> . SELF
    (40) exp4 -> . ID P exp4
    (41) exp4 -> . SELF P exp4
    (42) call -> . ID LPAREN params RPAREN
    (43) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 31
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    SELF            shift and go to state 41

    exp1                           shift and go to state 67
    exp2                           shift and go to state 34
    exp3                           shift and go to state 35
    exp4                           shift and go to state 36
    call                           shift and go to state 37

state 48

    (28) exp1 -> exp1 SOMA . exp2
    (30) exp2 -> . exp2 VEZES exp3
    (31) exp2 -> . exp3
    (32) exp3 -> . exp4 POT exp3
    (33) exp3 -> . exp4
    (34) exp4 -> . call
    (35) exp4 -> . NUMBER
    (36) exp4 -> . ID
    (37) exp4 -> . TRUE
    (38) exp4 -> . FALSE
    (39) exp4 -> . SELF
    (40) exp4 -> . ID P exp4
    (41) exp4 -> . SELF P exp4
    (42) call -> . ID LPAREN params RPAREN
    (43) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 31
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    SELF            shift and go to state 41

    exp2                           shift and go to state 68
    exp3                           shift and go to state 35
    exp4                           shift and go to state 36
    call                           shift and go to state 37

state 49

    (30) exp2 -> exp2 VEZES . exp3
    (32) exp3 -> . exp4 POT exp3
    (33) exp3 -> . exp4
    (34) exp4 -> . call
    (35) exp4 -> . NUMBER
    (36) exp4 -> . ID
    (37) exp4 -> . TRUE
    (38) exp4 -> . FALSE
    (39) exp4 -> . SELF
    (40) exp4 -> . ID P exp4
    (41) exp4 -> . SELF P exp4
    (42) call -> . ID LPAREN params RPAREN
    (43) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 31
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    SELF            shift and go to state 41

    exp3                           shift and go to state 69
    exp4                           shift and go to state 36
    call                           shift and go to state 37

state 50

    (32) exp3 -> exp4 POT . exp3
    (32) exp3 -> . exp4 POT exp3
    (33) exp3 -> . exp4
    (34) exp4 -> . call
    (35) exp4 -> . NUMBER
    (36) exp4 -> . ID
    (37) exp4 -> . TRUE
    (38) exp4 -> . FALSE
    (39) exp4 -> . SELF
    (40) exp4 -> . ID P exp4
    (41) exp4 -> . SELF P exp4
    (42) call -> . ID LPAREN params RPAREN
    (43) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 31
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    SELF            shift and go to state 41

    exp4                           shift and go to state 36
    exp3                           shift and go to state 70
    call                           shift and go to state 37

state 51

    (41) exp4 -> SELF P . exp4
    (34) exp4 -> . call
    (35) exp4 -> . NUMBER
    (36) exp4 -> . ID
    (37) exp4 -> . TRUE
    (38) exp4 -> . FALSE
    (39) exp4 -> . SELF
    (40) exp4 -> . ID P exp4
    (41) exp4 -> . SELF P exp4
    (42) call -> . ID LPAREN params RPAREN
    (43) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 31
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    SELF            shift and go to state 41

    exp4                           shift and go to state 71
    call                           shift and go to state 37

state 52

    (19) body -> NEWLINE IDENT stms . DEDENT

    DEDENT          shift and go to state 72


state 53

    (20) stms -> stm .
    (21) stms -> stm . stms
    (20) stms -> . stm
    (21) stms -> . stm stms
    (22) stm -> . exp NEWLINE
    (23) stm -> . WHILE exp DP body
    (24) stm -> . RETURN exp NEWLINE
    (25) stm -> . PASS NEWLINE
    (26) exp -> . exp IGUAL exp1
    (27) exp -> . exp1
    (28) exp1 -> . exp1 SOMA exp2
    (29) exp1 -> . exp2
    (30) exp2 -> . exp2 VEZES exp3
    (31) exp2 -> . exp3
    (32) exp3 -> . exp4 POT exp3
    (33) exp3 -> . exp4
    (34) exp4 -> . call
    (35) exp4 -> . NUMBER
    (36) exp4 -> . ID
    (37) exp4 -> . TRUE
    (38) exp4 -> . FALSE
    (39) exp4 -> . SELF
    (40) exp4 -> . ID P exp4
    (41) exp4 -> . SELF P exp4
    (42) call -> . ID LPAREN params RPAREN
    (43) call -> . ID LPAREN RPAREN

    DEDENT          reduce using rule 20 (stms -> stm .)
    WHILE           shift and go to state 55
    RETURN          shift and go to state 56
    PASS            shift and go to state 57
    NUMBER          shift and go to state 38
    ID              shift and go to state 31
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    SELF            shift and go to state 41

    stm                            shift and go to state 53
    stms                           shift and go to state 73
    exp                            shift and go to state 54
    exp1                           shift and go to state 33
    exp2                           shift and go to state 34
    exp3                           shift and go to state 35
    exp4                           shift and go to state 36
    call                           shift and go to state 37

state 54

    (22) stm -> exp . NEWLINE
    (26) exp -> exp . IGUAL exp1

    NEWLINE         shift and go to state 74
    IGUAL           shift and go to state 47


state 55

    (23) stm -> WHILE . exp DP body
    (26) exp -> . exp IGUAL exp1
    (27) exp -> . exp1
    (28) exp1 -> . exp1 SOMA exp2
    (29) exp1 -> . exp2
    (30) exp2 -> . exp2 VEZES exp3
    (31) exp2 -> . exp3
    (32) exp3 -> . exp4 POT exp3
    (33) exp3 -> . exp4
    (34) exp4 -> . call
    (35) exp4 -> . NUMBER
    (36) exp4 -> . ID
    (37) exp4 -> . TRUE
    (38) exp4 -> . FALSE
    (39) exp4 -> . SELF
    (40) exp4 -> . ID P exp4
    (41) exp4 -> . SELF P exp4
    (42) call -> . ID LPAREN params RPAREN
    (43) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 31
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    SELF            shift and go to state 41

    exp                            shift and go to state 75
    exp1                           shift and go to state 33
    exp2                           shift and go to state 34
    exp3                           shift and go to state 35
    exp4                           shift and go to state 36
    call                           shift and go to state 37

state 56

    (24) stm -> RETURN . exp NEWLINE
    (26) exp -> . exp IGUAL exp1
    (27) exp -> . exp1
    (28) exp1 -> . exp1 SOMA exp2
    (29) exp1 -> . exp2
    (30) exp2 -> . exp2 VEZES exp3
    (31) exp2 -> . exp3
    (32) exp3 -> . exp4 POT exp3
    (33) exp3 -> . exp4
    (34) exp4 -> . call
    (35) exp4 -> . NUMBER
    (36) exp4 -> . ID
    (37) exp4 -> . TRUE
    (38) exp4 -> . FALSE
    (39) exp4 -> . SELF
    (40) exp4 -> . ID P exp4
    (41) exp4 -> . SELF P exp4
    (42) call -> . ID LPAREN params RPAREN
    (43) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 31
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    SELF            shift and go to state 41

    exp                            shift and go to state 76
    exp1                           shift and go to state 33
    exp2                           shift and go to state 34
    exp3                           shift and go to state 35
    exp4                           shift and go to state 36
    call                           shift and go to state 37

state 57

    (25) stm -> PASS . NEWLINE

    NEWLINE         shift and go to state 77


state 58

    (15) sigparams -> ID .
    (17) sigparams -> ID . COMMA sigparams

    RPAREN          reduce using rule 15 (sigparams -> ID .)
    COMMA           shift and go to state 78


state 59

    (13) signature -> DEF ID LPAREN sigparams . RPAREN DP

    RPAREN          shift and go to state 79


state 60

    (14) signature -> DEF ID LPAREN RPAREN . DP

    DP              shift and go to state 80


state 61

    (16) sigparams -> SELF .
    (18) sigparams -> SELF . COMMA sigparams

    RPAREN          reduce using rule 16 (sigparams -> SELF .)
    COMMA           shift and go to state 81


state 62

    (4) program -> CLASS ID LPAREN ID IGUAL ID RPAREN DP classbody program .

    $end            reduce using rule 4 (program -> CLASS ID LPAREN ID IGUAL ID RPAREN DP classbody program .)


state 63

    (40) exp4 -> ID P exp4 .

    POT             reduce using rule 40 (exp4 -> ID P exp4 .)
    VEZES           reduce using rule 40 (exp4 -> ID P exp4 .)
    SOMA            reduce using rule 40 (exp4 -> ID P exp4 .)
    IGUAL           reduce using rule 40 (exp4 -> ID P exp4 .)
    ID              reduce using rule 40 (exp4 -> ID P exp4 .)
    DEF             reduce using rule 40 (exp4 -> ID P exp4 .)
    DEDENT          reduce using rule 40 (exp4 -> ID P exp4 .)
    NEWLINE         reduce using rule 40 (exp4 -> ID P exp4 .)
    COMMA           reduce using rule 40 (exp4 -> ID P exp4 .)
    RPAREN          reduce using rule 40 (exp4 -> ID P exp4 .)
    DP              reduce using rule 40 (exp4 -> ID P exp4 .)


state 64

    (42) call -> ID LPAREN params . RPAREN

    RPAREN          shift and go to state 82


state 65

    (43) call -> ID LPAREN RPAREN .

    POT             reduce using rule 43 (call -> ID LPAREN RPAREN .)
    VEZES           reduce using rule 43 (call -> ID LPAREN RPAREN .)
    SOMA            reduce using rule 43 (call -> ID LPAREN RPAREN .)
    IGUAL           reduce using rule 43 (call -> ID LPAREN RPAREN .)
    ID              reduce using rule 43 (call -> ID LPAREN RPAREN .)
    DEF             reduce using rule 43 (call -> ID LPAREN RPAREN .)
    DEDENT          reduce using rule 43 (call -> ID LPAREN RPAREN .)
    NEWLINE         reduce using rule 43 (call -> ID LPAREN RPAREN .)
    COMMA           reduce using rule 43 (call -> ID LPAREN RPAREN .)
    RPAREN          reduce using rule 43 (call -> ID LPAREN RPAREN .)
    DP              reduce using rule 43 (call -> ID LPAREN RPAREN .)


state 66

    (44) params -> exp . COMMA params
    (45) params -> exp .
    (26) exp -> exp . IGUAL exp1

    COMMA           shift and go to state 83
    RPAREN          reduce using rule 45 (params -> exp .)
    IGUAL           shift and go to state 47


state 67

    (26) exp -> exp IGUAL exp1 .
    (28) exp1 -> exp1 . SOMA exp2

    IGUAL           reduce using rule 26 (exp -> exp IGUAL exp1 .)
    ID              reduce using rule 26 (exp -> exp IGUAL exp1 .)
    DEF             reduce using rule 26 (exp -> exp IGUAL exp1 .)
    DEDENT          reduce using rule 26 (exp -> exp IGUAL exp1 .)
    NEWLINE         reduce using rule 26 (exp -> exp IGUAL exp1 .)
    COMMA           reduce using rule 26 (exp -> exp IGUAL exp1 .)
    RPAREN          reduce using rule 26 (exp -> exp IGUAL exp1 .)
    DP              reduce using rule 26 (exp -> exp IGUAL exp1 .)
    SOMA            shift and go to state 48


state 68

    (28) exp1 -> exp1 SOMA exp2 .
    (30) exp2 -> exp2 . VEZES exp3

    SOMA            reduce using rule 28 (exp1 -> exp1 SOMA exp2 .)
    IGUAL           reduce using rule 28 (exp1 -> exp1 SOMA exp2 .)
    ID              reduce using rule 28 (exp1 -> exp1 SOMA exp2 .)
    DEF             reduce using rule 28 (exp1 -> exp1 SOMA exp2 .)
    DEDENT          reduce using rule 28 (exp1 -> exp1 SOMA exp2 .)
    NEWLINE         reduce using rule 28 (exp1 -> exp1 SOMA exp2 .)
    COMMA           reduce using rule 28 (exp1 -> exp1 SOMA exp2 .)
    RPAREN          reduce using rule 28 (exp1 -> exp1 SOMA exp2 .)
    DP              reduce using rule 28 (exp1 -> exp1 SOMA exp2 .)
    VEZES           shift and go to state 49


state 69

    (30) exp2 -> exp2 VEZES exp3 .

    VEZES           reduce using rule 30 (exp2 -> exp2 VEZES exp3 .)
    SOMA            reduce using rule 30 (exp2 -> exp2 VEZES exp3 .)
    IGUAL           reduce using rule 30 (exp2 -> exp2 VEZES exp3 .)
    ID              reduce using rule 30 (exp2 -> exp2 VEZES exp3 .)
    DEF             reduce using rule 30 (exp2 -> exp2 VEZES exp3 .)
    DEDENT          reduce using rule 30 (exp2 -> exp2 VEZES exp3 .)
    NEWLINE         reduce using rule 30 (exp2 -> exp2 VEZES exp3 .)
    COMMA           reduce using rule 30 (exp2 -> exp2 VEZES exp3 .)
    RPAREN          reduce using rule 30 (exp2 -> exp2 VEZES exp3 .)
    DP              reduce using rule 30 (exp2 -> exp2 VEZES exp3 .)


state 70

    (32) exp3 -> exp4 POT exp3 .

    VEZES           reduce using rule 32 (exp3 -> exp4 POT exp3 .)
    SOMA            reduce using rule 32 (exp3 -> exp4 POT exp3 .)
    IGUAL           reduce using rule 32 (exp3 -> exp4 POT exp3 .)
    ID              reduce using rule 32 (exp3 -> exp4 POT exp3 .)
    DEF             reduce using rule 32 (exp3 -> exp4 POT exp3 .)
    DEDENT          reduce using rule 32 (exp3 -> exp4 POT exp3 .)
    NEWLINE         reduce using rule 32 (exp3 -> exp4 POT exp3 .)
    COMMA           reduce using rule 32 (exp3 -> exp4 POT exp3 .)
    RPAREN          reduce using rule 32 (exp3 -> exp4 POT exp3 .)
    DP              reduce using rule 32 (exp3 -> exp4 POT exp3 .)


state 71

    (41) exp4 -> SELF P exp4 .

    POT             reduce using rule 41 (exp4 -> SELF P exp4 .)
    VEZES           reduce using rule 41 (exp4 -> SELF P exp4 .)
    SOMA            reduce using rule 41 (exp4 -> SELF P exp4 .)
    IGUAL           reduce using rule 41 (exp4 -> SELF P exp4 .)
    ID              reduce using rule 41 (exp4 -> SELF P exp4 .)
    DEF             reduce using rule 41 (exp4 -> SELF P exp4 .)
    DEDENT          reduce using rule 41 (exp4 -> SELF P exp4 .)
    NEWLINE         reduce using rule 41 (exp4 -> SELF P exp4 .)
    COMMA           reduce using rule 41 (exp4 -> SELF P exp4 .)
    RPAREN          reduce using rule 41 (exp4 -> SELF P exp4 .)
    DP              reduce using rule 41 (exp4 -> SELF P exp4 .)


state 72

    (19) body -> NEWLINE IDENT stms DEDENT .

    ID              reduce using rule 19 (body -> NEWLINE IDENT stms DEDENT .)
    DEF             reduce using rule 19 (body -> NEWLINE IDENT stms DEDENT .)
    DEDENT          reduce using rule 19 (body -> NEWLINE IDENT stms DEDENT .)
    WHILE           reduce using rule 19 (body -> NEWLINE IDENT stms DEDENT .)
    RETURN          reduce using rule 19 (body -> NEWLINE IDENT stms DEDENT .)
    PASS            reduce using rule 19 (body -> NEWLINE IDENT stms DEDENT .)
    NUMBER          reduce using rule 19 (body -> NEWLINE IDENT stms DEDENT .)
    TRUE            reduce using rule 19 (body -> NEWLINE IDENT stms DEDENT .)
    FALSE           reduce using rule 19 (body -> NEWLINE IDENT stms DEDENT .)
    SELF            reduce using rule 19 (body -> NEWLINE IDENT stms DEDENT .)


state 73

    (21) stms -> stm stms .

    DEDENT          reduce using rule 21 (stms -> stm stms .)


state 74

    (22) stm -> exp NEWLINE .

    WHILE           reduce using rule 22 (stm -> exp NEWLINE .)
    RETURN          reduce using rule 22 (stm -> exp NEWLINE .)
    PASS            reduce using rule 22 (stm -> exp NEWLINE .)
    NUMBER          reduce using rule 22 (stm -> exp NEWLINE .)
    ID              reduce using rule 22 (stm -> exp NEWLINE .)
    TRUE            reduce using rule 22 (stm -> exp NEWLINE .)
    FALSE           reduce using rule 22 (stm -> exp NEWLINE .)
    SELF            reduce using rule 22 (stm -> exp NEWLINE .)
    DEDENT          reduce using rule 22 (stm -> exp NEWLINE .)


state 75

    (23) stm -> WHILE exp . DP body
    (26) exp -> exp . IGUAL exp1

    DP              shift and go to state 84
    IGUAL           shift and go to state 47


state 76

    (24) stm -> RETURN exp . NEWLINE
    (26) exp -> exp . IGUAL exp1

    NEWLINE         shift and go to state 85
    IGUAL           shift and go to state 47


state 77

    (25) stm -> PASS NEWLINE .

    WHILE           reduce using rule 25 (stm -> PASS NEWLINE .)
    RETURN          reduce using rule 25 (stm -> PASS NEWLINE .)
    PASS            reduce using rule 25 (stm -> PASS NEWLINE .)
    NUMBER          reduce using rule 25 (stm -> PASS NEWLINE .)
    ID              reduce using rule 25 (stm -> PASS NEWLINE .)
    TRUE            reduce using rule 25 (stm -> PASS NEWLINE .)
    FALSE           reduce using rule 25 (stm -> PASS NEWLINE .)
    SELF            reduce using rule 25 (stm -> PASS NEWLINE .)
    DEDENT          reduce using rule 25 (stm -> PASS NEWLINE .)


state 78

    (17) sigparams -> ID COMMA . sigparams
    (15) sigparams -> . ID
    (16) sigparams -> . SELF
    (17) sigparams -> . ID COMMA sigparams
    (18) sigparams -> . SELF COMMA sigparams

    ID              shift and go to state 58
    SELF            shift and go to state 61

    sigparams                      shift and go to state 86

state 79

    (13) signature -> DEF ID LPAREN sigparams RPAREN . DP

    DP              shift and go to state 87


state 80

    (14) signature -> DEF ID LPAREN RPAREN DP .

    NEWLINE         reduce using rule 14 (signature -> DEF ID LPAREN RPAREN DP .)


state 81

    (18) sigparams -> SELF COMMA . sigparams
    (15) sigparams -> . ID
    (16) sigparams -> . SELF
    (17) sigparams -> . ID COMMA sigparams
    (18) sigparams -> . SELF COMMA sigparams

    ID              shift and go to state 58
    SELF            shift and go to state 61

    sigparams                      shift and go to state 88

state 82

    (42) call -> ID LPAREN params RPAREN .

    POT             reduce using rule 42 (call -> ID LPAREN params RPAREN .)
    VEZES           reduce using rule 42 (call -> ID LPAREN params RPAREN .)
    SOMA            reduce using rule 42 (call -> ID LPAREN params RPAREN .)
    IGUAL           reduce using rule 42 (call -> ID LPAREN params RPAREN .)
    ID              reduce using rule 42 (call -> ID LPAREN params RPAREN .)
    DEF             reduce using rule 42 (call -> ID LPAREN params RPAREN .)
    DEDENT          reduce using rule 42 (call -> ID LPAREN params RPAREN .)
    NEWLINE         reduce using rule 42 (call -> ID LPAREN params RPAREN .)
    COMMA           reduce using rule 42 (call -> ID LPAREN params RPAREN .)
    RPAREN          reduce using rule 42 (call -> ID LPAREN params RPAREN .)
    DP              reduce using rule 42 (call -> ID LPAREN params RPAREN .)


state 83

    (44) params -> exp COMMA . params
    (44) params -> . exp COMMA params
    (45) params -> . exp
    (26) exp -> . exp IGUAL exp1
    (27) exp -> . exp1
    (28) exp1 -> . exp1 SOMA exp2
    (29) exp1 -> . exp2
    (30) exp2 -> . exp2 VEZES exp3
    (31) exp2 -> . exp3
    (32) exp3 -> . exp4 POT exp3
    (33) exp3 -> . exp4
    (34) exp4 -> . call
    (35) exp4 -> . NUMBER
    (36) exp4 -> . ID
    (37) exp4 -> . TRUE
    (38) exp4 -> . FALSE
    (39) exp4 -> . SELF
    (40) exp4 -> . ID P exp4
    (41) exp4 -> . SELF P exp4
    (42) call -> . ID LPAREN params RPAREN
    (43) call -> . ID LPAREN RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 31
    TRUE            shift and go to state 39
    FALSE           shift and go to state 40
    SELF            shift and go to state 41

    exp                            shift and go to state 66
    params                         shift and go to state 89
    exp1                           shift and go to state 33
    exp2                           shift and go to state 34
    exp3                           shift and go to state 35
    exp4                           shift and go to state 36
    call                           shift and go to state 37

state 84

    (23) stm -> WHILE exp DP . body
    (19) body -> . NEWLINE IDENT stms DEDENT

    NEWLINE         shift and go to state 27

    body                           shift and go to state 90

state 85

    (24) stm -> RETURN exp NEWLINE .

    WHILE           reduce using rule 24 (stm -> RETURN exp NEWLINE .)
    RETURN          reduce using rule 24 (stm -> RETURN exp NEWLINE .)
    PASS            reduce using rule 24 (stm -> RETURN exp NEWLINE .)
    NUMBER          reduce using rule 24 (stm -> RETURN exp NEWLINE .)
    ID              reduce using rule 24 (stm -> RETURN exp NEWLINE .)
    TRUE            reduce using rule 24 (stm -> RETURN exp NEWLINE .)
    FALSE           reduce using rule 24 (stm -> RETURN exp NEWLINE .)
    SELF            reduce using rule 24 (stm -> RETURN exp NEWLINE .)
    DEDENT          reduce using rule 24 (stm -> RETURN exp NEWLINE .)


state 86

    (17) sigparams -> ID COMMA sigparams .

    RPAREN          reduce using rule 17 (sigparams -> ID COMMA sigparams .)


state 87

    (13) signature -> DEF ID LPAREN sigparams RPAREN DP .

    NEWLINE         reduce using rule 13 (signature -> DEF ID LPAREN sigparams RPAREN DP .)


state 88

    (18) sigparams -> SELF COMMA sigparams .

    RPAREN          reduce using rule 18 (sigparams -> SELF COMMA sigparams .)


state 89

    (44) params -> exp COMMA params .

    RPAREN          reduce using rule 44 (params -> exp COMMA params .)


state 90

    (23) stm -> WHILE exp DP body .

    WHILE           reduce using rule 23 (stm -> WHILE exp DP body .)
    RETURN          reduce using rule 23 (stm -> WHILE exp DP body .)
    PASS            reduce using rule 23 (stm -> WHILE exp DP body .)
    NUMBER          reduce using rule 23 (stm -> WHILE exp DP body .)
    ID              reduce using rule 23 (stm -> WHILE exp DP body .)
    TRUE            reduce using rule 23 (stm -> WHILE exp DP body .)
    FALSE           reduce using rule 23 (stm -> WHILE exp DP body .)
    SELF            reduce using rule 23 (stm -> WHILE exp DP body .)
    DEDENT          reduce using rule 23 (stm -> WHILE exp DP body .)

